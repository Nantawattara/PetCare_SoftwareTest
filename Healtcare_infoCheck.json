{"files":[{"id":"00acc1e3-c6b2-401b-b7ed-6dea4d82daab","name":"appsscript","type":"json","source":"{\n  \"timeZone\": \"Asia/Bangkok\",\n  \"dependencies\": {},\n  \"exceptionLogging\": \"STACKDRIVER\",\n  \"runtimeVersion\": \"V8\",\n  \"webapp\": {\n    \"executeAs\": \"USER_DEPLOYING\",\n    \"access\": \"ANYONE_ANONYMOUS\"\n  }\n}"},{"id":"41cc162a-211f-413c-8542-861d904842ed","name":"Code","type":"server_js","source":"function doGet(request) {\n  var lineid \u003d request.parameter.lineid;\n  // var lineid \u003d \"U0d10105672e712b3ca5ebbbac92a59da\";\n\n  // Log the provided lineid\n  Logger.log(\"Line ID: \" + lineid);\n\n  // Access the Google Spreadsheet\n  var ss \u003d SpreadsheetApp.openByUrl(\"https://docs.google.com/spreadsheets/d/1X8xIurq1VBxduSGaeW-s93Le5S2BPGWR_CTCEyS3nP4/edit?usp\u003dsharing\");\n  var sheet \u003d ss.getSheetByName(\u0027Register\u0027);\n  \n  // Get all data from the sheet\n  var data \u003d sheet.getDataRange().getValues();\n\n  // Log the data fetched from the sheet\n  Logger.log(\"Sheet data: \" + JSON.stringify(data));\n\n  // Check if lineid is provided\n  if (!lineid) {\n    Logger.log(\"No Line ID provided\");\n    return ContentService.createTextOutput(JSON.stringify({ status: \u0027warning\u0027, message: \u0027No Line ID provided\u0027 }))\n      .setMimeType(ContentService.MimeType.JSON);\n  }\n\n  // Check for duplicate lineid and return the row data if found\n  var foundData \u003d null;\n  for (var i \u003d 1; i \u003c data.length; i++) { // Start from row 1 to skip header\n    Logger.log(\"Checking row \" + (i + 1) + \": lineid\u003d\" + data[i][7]);  // Log the row being checked\n    if (data[i][7] \u003d\u003d\u003d lineid) {\n      foundData \u003d data[i]; // Save the matching row data\n      Logger.log(\"Match found in row \" + (i + 1));\n      break; // Exit the loop\n    }\n  }\n  \n  // Return appropriate messages based on duplicate check\n  if (foundData) {\n    Logger.log(\"Line ID already registered\");\n    // If a match is found, return the row data\n    var result \u003d {\n      status: \u0027success\u0027,\n      message: \u0027Line ID ของท่านเคยลงทะเบียนไว้แล้ว\u0027,\n      data: {\n        title: foundData[0],\n        name: foundData[1],\n        bd: foundData[2],\n        tel: foundData[3],\n        mail: foundData[4],\n        ctcid: foundData[5],\n        gender: foundData[6],\n        lineid: foundData[7],\n        insure: foundData[8],\n        type: foundData[9],\n      }\n    };\n    return ContentService.createTextOutput(JSON.stringify(result))\n      .setMimeType(ContentService.MimeType.JSON);\n  } else {\n    Logger.log(\"Line ID not found\");\n    var result \u003d {\n      status: \u0027fail\u0027,\n      message: \u0027Line ID ของท่านไม่เคยลงทะเบียนไว้แล้ว\u0027,\n      data: {\n        title: \u0027\u0027,\n        name: \u0027\u0027,\n        bd: \u0027\u0027,\n        tel: \u0027\u0027,\n        mail: \u0027\u0027,\n        ctcid: \u0027\u0027,\n        gender: \u0027\u0027,\n        lineid: \u0027\u0027,\n        insure: \u0027\u0027,\n        type: \u0027\u0027\n      }\n    };\n    return ContentService.createTextOutput(JSON.stringify(result))\n      .setMimeType(ContentService.MimeType.JSON);\n  }\n}"}]}